# golangci-lint configuration for Muscle Dreamer ECS Framework
# High-quality code standards for game development

linters-settings:
  cyclop:
    max-complexity: 15
    package-average: 0.0
    skip-tests: false

  dupl:
    threshold: 100

  errorlint:
    errorf: true
    asserts: true
    comparison: true

  exhaustive:
    check-generated: false
    default-signifies-exhaustive: false

  gci:
    local-prefixes: muscle-dreamer

  goconst:
    min-len: 2
    min-occurrences: 2

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc

  gocyclo:
    min-complexity: 15

  godot:
    scope: declarations
    exclude:
      - "^fixme:"
      - "^todo:"
    period: true
    capital: false

  goimports:
    local-prefixes: muscle-dreamer

  gomnd:
    settings:
      mnd:
        checks: 
          - argument
          - case
          - condition
          - operation
          - return
          - assign

  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf

  lll:
    line-length: 140

  maligned:
    suggest-new: true

  misspell:
    locale: US

  nolintlint:
    allow-leading-space: true
    allow-unused: false
    require-explanation: false
    require-specific: false

  revive:
    severity: warning
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-naming
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: redefines-builtin-id

  rowserrcheck:
    packages:
      - github.com/jmoiron/sqlx

  staticcheck:
    go: "1.22"
    checks: ["all"]

  stylecheck:
    go: "1.22"
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    dot-import-whitelist:
      - fmt
    http-status-code-whitelist: ["200", "400", "404", "500"]

  tagliatelle:
    case:
      rules:
        json: camel
        yaml: camel
        xml: camel
        bson: camel
        avro: snake
        mapstructure: kebab

  tenv:
    all: false

  testpackage:
    skip-regexp: (export|internal)_test\.go

  unparam:
    check-exported: false

  unused:
    go: "1.22"

  whitespace:
    multi-if: false
    multi-func: false

  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(

linters:
  disable-all: true
  enable:
    # Enabled by default
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused

    # Additional quality linters
    - asciicheck
    - bodyclose
    - contextcheck
    - cyclop
    - dupl
    - durationcheck
    - errorlint
    - exhaustive
    - exportloopref
    - forcetypeassert
    - gci
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gofmt
    - gofumpt
    - goimports
    - gomnd
    - goprintffuncname
    - gosec
    - lll
    - makezero
    - misspell
    - nakedret
    - nilerr
    - nilnil 
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tagliatelle
    - tenv
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - wastedassign
    - whitespace

    # ECS/Game specific
    - gomoddirectives
    - gomodguard

  # Don't enable:
  # - gochecknoglobals: We need some globals for ECS performance
  # - funlen: Game systems can be legitimately long
  # - nestif: Game logic can have complex nested conditions
  # - godox: Allow TODO/FIXME in development
  # - wsl: Too strict for game development patterns

issues:
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gomnd
        - goconst
        - dupl
        - lll
        - errcheck
        - gosec

    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    # ECS specific exclusions
    - path: internal/core/ecs/
      linters:
        - gomnd  # Magic numbers are common in ECS for performance
      text: "Magic number"

    - path: internal/core/ecs/types.go
      linters:
        - gochecknoglobals  # Type constants are acceptable

    # Performance critical code exclusions
    - path: internal/core/ecs/(entity|component|system|query)\.go
      linters:
        - prealloc  # Manual optimization in hot paths

    # Test file exclusions
    - path: _test\.go
      text: "fieldalignment:"

  exclude-use-default: false
  max-issues-per-linter: 0
  max-same-issues: 0

run:
  timeout: 5m
  go: "1.22"
  modules-download-mode: readonly
  allow-parallel-runners: true

  skip-dirs:
    - bin
    - vendor
    - var
    - tmp
    - .git
    - node_modules

  skip-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true